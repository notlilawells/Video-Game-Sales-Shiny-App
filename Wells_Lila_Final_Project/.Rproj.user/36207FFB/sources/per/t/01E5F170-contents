gt(pizza_summary, rowname_col = "name", groupname_col = "type") %>%
row_group_order(groups = c("classic", "chicken")) %>%
tab_header(
title = md("**Pizza Place Annual Pizza Sales**"),
subtitle = "Fiscal Year 2015") %>%
cols_label(
number_sold = html("Number<br>Sold"),
profit = html("Annual<br>Revenue")) %>%
fmt_currency(
columns = profit,
currency = "USD") %>%
fmt_number(
columns = number_sold,
decimals = 0) %>%
tab_source_note(
source_note = html("Source: <em>gt</em> package dataset")) %>%
summary_rows(
groups = TRUE,
columns = c(number_sold),
fns = list(Total = "sum"),
formatter = fmt_number,
decimals = 0) %>%
summary_rows(
groups = TRUE,
columns = c(profit),
fns = list(Total = "sum"),
formatter = fmt_currency,
currency = "USD") %>%
tab_footnote(
footnote = "Our most popular pizza!",
locations = cells_stub(rows = "classic_dlx")) %>%
opt_footnote_marks(marks = "standard") %>%
tab_style_by_grp(
column = number_sold,
fn = max,
style = cell_fill(color = "blue", alpha = 0.25) # Note: fix the color later
) %>%
tab_style_by_grp(
column = profit,
fn = max,
style = cell_fill(color = "red", alpha = 0.25)
) %>%
opt_table_outline() %>%
tab_options(
row_group.background.color = "grey14",
summary_row.background.color = "grey90",
stub.border.style = "dashed"
) %>%
cols_width(
number_sold ~ px(100),
profit ~ px(110),
name ~ px(120)
)
#| label: ex-1-table
# Creating the table
gt(pizza_summary, rowname_col = "name", groupname_col = "type") %>%
row_group_order(groups = c("classic", "chicken")) %>%
tab_header(
title = md("**Pizza Place Annual Pizza Sales**"),
subtitle = "Fiscal Year 2015") %>%
cols_label(
number_sold = html("Number<br>Sold"),
profit = html("Annual<br>Revenue")) %>%
fmt_currency(
columns = profit,
currency = "USD") %>%
fmt_number(
columns = number_sold,
decimals = 0) %>%
tab_source_note(
source_note = html("Source: <em>gt</em> package dataset")) %>%
summary_rows(
groups = TRUE,
columns = c(number_sold),
fns = list(Total = "sum"),
formatter = fmt_number,
decimals = 0) %>%
summary_rows(
groups = TRUE,
columns = c(profit),
fns = list(Total = "sum"),
formatter = fmt_currency,
currency = "USD") %>%
tab_footnote(
footnote = "Our most popular pizza!",
locations = cells_stub(rows = "classic_dlx")) %>%
opt_footnote_marks(marks = "standard") %>%
tab_style_by_grp(
column = number_sold,
fn = max,
style = cell_fill(color = "blue", alpha = 0.25) # Note: fix the color later
) %>%
tab_style_by_grp(
column = profit,
fn = max,
style = cell_fill(color = "red", alpha = 0.25)
) %>%
opt_table_outline() %>%
tab_options(
row_group.background.color = "grey14",
summary_row.background.color = "grey90",
stub.border.style = "dashed"
) %>%
cols_width(
number_sold ~ px(100),
profit ~ px(110),
name ~ px(120)
)
#| label: ex-2-data-wrangling
# data wrangling
pizza_size <- pizzaplace %>%
filter(
size %in% c("S", "L", "M"),
type %in% c("chicken", "classic", "veggie")
) %>%
group_by(type, size) %>%
summarize(
number_sold = n(),
profit = sum(price)
) %>%
ungroup() %>%
rename(category = type)
#| label: table-1
# Creating the table
gt(pizza_size, rowname_col = "size", groupname_col = "category") %>%
tab_header(
title = md("**Pizza Place Annual Pizza Sales**"),
subtitle = "Fiscal Year 2015") %>%
cols_width(
number_sold ~ px(130),
profit ~ px(130),
size ~ px(40)
) %>%
tab_style(
style = list(
cell_fill(color = "#F8766D"),
cell_text(color = "white")),
locations = cells_body(
columns = c(number_sold, profit),
rows = size == "S"
)
) %>%
tab_style(
style = list(
cell_fill(color = "#00BA38"),
cell_text(style = "italic")),
locations = cells_body(
columns = c(number_sold, profit),
rows = size == "M"
)
) %>%
tab_style(
style = list(
cell_fill(color = "#619CFF"),
cell_text(weight = "bold")),
locations = cells_body(
columns = c(number_sold, profit),
rows = size == "L"
)
)
#| label: table-2
# Creating the table
gt(pizza_size, rowname_col = "size", groupname_col = "category") %>%
tab_header(
title = md("**Pizza Place Annual Pizza Sales**"),
subtitle = "Fiscal Year 2015") %>%
cols_width(
number_sold ~ px(130),
profit ~ px(130),
size ~ px(40)
) %>%
gt_color_rows(
columns = number_sold,
palette = "Pastel1",
pal_type = "discrete"
) %>%
gt_color_rows(
columns = profit,
palette = c("white", "skyblue")
)
#| label: ex-3-data-wrangle
# data wrangling
house_illinois <- house_prices %>%
filter(state %in% c("Illinois")) %>%
mutate(year = year(date)) %>%
filter(year %in% c(2005:2010) ) %>%
group_by(year) %>%
summarize(
hpi = mean(house_price_index),
change = mean(house_price_perc)
)
#| label: ex-3-table
gt(house_illinois) %>%
tab_header(
title = "Average Annual Housing Price Index (HPI)",
subtitle = md("*Illinois Prices for 2006-2010*")) %>%
cols_label(
hpi = "Value",
change = "% Change",
year = "") %>%
fmt_currency(
columns = hpi,
currency = "USD") %>%
fmt_percent(
columns = change,
decimals = 2
) %>%
tab_spanner(
label = "Housing Price Index",
columns = c(hpi, change)
) %>%
tab_style(
style = cell_text(color = "red"),
locations = cells_body(
columns = c(change),
rows = change < 0
)
) %>%
cols_width(
year ~ px(100),
hpi ~ px(150),
change ~ px(150)
) %>%
fmt_percent(
columns = change,
rows = change < 0,
accounting = TRUE
) %>%
tab_footnote(
footnote = "Housing market crash",
locations = cells_stub(rows = "2008"))
#| label: ex-3-table
gt(house_illinois) %>%
tab_header(
title = "Average Annual Housing Price Index (HPI)",
subtitle = md("*Illinois Prices for 2006-2010*")) %>%
cols_label(
hpi = "Value",
change = "% Change",
year = "") %>%
fmt_currency(
columns = hpi,
currency = "USD") %>%
fmt_percent(
columns = change,
decimals = 2
) %>%
tab_spanner(
label = "Housing Price Index",
columns = c(hpi, change)
) %>%
tab_style(
style = cell_text(color = "red"),
locations = cells_body(
columns = c(change),
rows = change < 0
)
) %>%
cols_width(
year ~ px(100),
hpi ~ px(150),
change ~ px(150)
) %>%
fmt_percent(
columns = change,
rows = change < 0,
accounting = TRUE
) %>%
tab_footnote(
footnote = "Housing market crash",
locations = cells_body(rows = "2008"))
#| label: ex-3-table
gt(house_illinois) %>%
tab_header(
title = "Average Annual Housing Price Index (HPI)",
subtitle = md("*Illinois Prices for 2006-2010*")) %>%
cols_label(
hpi = "Value",
change = "% Change",
year = "") %>%
fmt_currency(
columns = hpi,
currency = "USD") %>%
fmt_percent(
columns = change,
decimals = 2
) %>%
tab_spanner(
label = "Housing Price Index",
columns = c(hpi, change)
) %>%
tab_style(
style = cell_text(color = "red"),
locations = cells_body(
columns = c(change),
rows = change < 0
)
) %>%
cols_width(
year ~ px(100),
hpi ~ px(150),
change ~ px(150)
) %>%
fmt_percent(
columns = change,
rows = change < 0,
accounting = TRUE
) %>%
tab_footnote(
footnote = "Housing market crash",
locations = cells_body(rows = 2008))
#| label: ex-3-table
gt(house_illinois) %>%
tab_header(
title = "Average Annual Housing Price Index (HPI)",
subtitle = md("*Illinois Prices for 2006-2010*")) %>%
cols_label(
hpi = "Value",
change = "% Change",
year = "") %>%
fmt_currency(
columns = hpi,
currency = "USD") %>%
fmt_percent(
columns = change,
decimals = 2
) %>%
tab_spanner(
label = "Housing Price Index",
columns = c(hpi, change)
) %>%
tab_style(
style = cell_text(color = "red"),
locations = cells_body(
columns = c(change),
rows = change < 0
)
) %>%
cols_width(
year ~ px(100),
hpi ~ px(150),
change ~ px(150)
) %>%
fmt_percent(
columns = change,
rows = change < 0,
accounting = TRUE
) %>%
tab_footnote(
footnote = "Housing market crash",
locations = cells_stub(rows = "2008"))
#| label: ex-3-table
gt(house_illinois) %>%
tab_header(
title = "Average Annual Housing Price Index (HPI)",
subtitle = md("*Illinois Prices for 2006-2010*")) %>%
cols_label(
hpi = "Value",
change = "% Change",
year = "") %>%
fmt_currency(
columns = hpi,
currency = "USD") %>%
fmt_percent(
columns = change,
decimals = 2
) %>%
tab_spanner(
label = "Housing Price Index",
columns = c(hpi, change)
) %>%
tab_style(
style = cell_text(color = "red"),
locations = cells_body(
columns = c(change),
rows = change < 0
)
) %>%
cols_width(
year ~ px(100),
hpi ~ px(150),
change ~ px(150)
) %>%
fmt_percent(
columns = change,
rows = change < 0,
accounting = TRUE
) %>%
tab_footnote(
footnote = "Housing market crash",
locations = cells_body(rows = year == 2008,
columns = year))
#| label: ex-3-table
gt(house_illinois) %>%
tab_header(
title = "Average Annual Housing Price Index (HPI)",
subtitle = md("*Illinois Prices for 2006-2010*")) %>%
cols_label(
hpi = "Value",
change = "% Change",
year = "") %>%
fmt_currency(
columns = hpi,
currency = "USD") %>%
fmt_percent(
columns = change,
decimals = 2
) %>%
tab_spanner(
label = "Housing Price Index",
columns = c(hpi, change)
) %>%
tab_style(
style = cell_text(color = "red"),
locations = cells_body(
columns = c(change),
rows = change < 0
)
) %>%
cols_width(
year ~ px(100),
hpi ~ px(150),
change ~ px(150)
) %>%
fmt_percent(
columns = change,
rows = change < 0,
accounting = TRUE
) %>%
tab_footnote(
footnote = "Housing market crash",
locations = cells_body(rows = year == 2008,
columns = year))
shiny::runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
spec()
spec()
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
shiny::runApp()
runApp()
runApp('~/Desktop/app')
shiny::runApp()
shiny::runApp()
runApp()
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp()
shiny::runApp()
shiny::runApp()
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
# Adding a sales_category column
vgsales$Sales_Category <- ifelse(vgsales$NA_Sales > 0, "North America",
ifelse(vgsales$EU_Sales > 0, "Europe",
ifelse(vgsales$JP_Sales > 0, "Japan",
ifelse(vgsales$Other_Sales > 0, "Other",
ifelse(vgsales$Global_Sales > 0, "Global", "Unknown")))))
# Loading data
vgames <- read_csv('data/vgsales.csv')
# Loading data
vgames <- read_csv('data/vgsales.csv')
# Mutating the data
vgsales_unique <- vgames[!duplicated(vgames$Name), ] # Getting rid of duplicate values for game names
# Loading data
vgames <- read_csv('data/vgsales.csv')
ifelse(vgsales$Global_Sales > 0, "Global", "Unknown")))))
# Mutating the data
vgsales_unique <- vgames[!duplicated(vgames$Name), ] # Getting rid of duplicate values for game names
# Loading data
vgames <- read_csv('data/vgsales.csv')
library(tidyverse)
vgames <- read_csv('data/vgsales.csv')
# Mutating the data
vgsales_unique <- vgames[!duplicated(vgames$Name), ] # Getting rid of duplicate values for game names
vgsales_2010 <- subset(vgsales_unique, Year >= 2010) # Only including games released after 2010
# Parsing down the data to only include top 100 selling games
vgsales <- vgsales_2010 %>% # Filtering for the top 100 grossing games
arrange(desc(Global_Sales)) %>%
slice(1:100)
# Adding a sales_category column
vgsales$Sales_Category <- ifelse(vgsales$NA_Sales > 0, "North America",
ifelse(vgsales$EU_Sales > 0, "Europe",
ifelse(vgsales$JP_Sales > 0, "Japan",
ifelse(vgsales$Other_Sales > 0, "Other",
ifelse(vgsales$Global_Sales > 0, "Global", "Unknown")))))
game_data <- reactive({vgsales %>% filter(Name == "Kinect Adventures!")})
game_data <- vgsales %>% filter(Name == "Kinect Adventures!")
shiny::runApp()
runApp()
runApp('~/Desktop/Wells_Lila_Final_Project')
shiny::runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
runApp()
runApp()
runApp('~/Desktop/STAT_302/Wells_Lila_Final_Project/Wells_Lila_Final_Project')
shiny::runApp()
